// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.ebay.trading.api;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Type defining the <b>BuyerRequirementDetails</b> container, which allows the
 * seller to set buyer requirements at the listing level. For the corresponding listing,
 * all buyer requirement values/settings will overwrite values/settings in Buyer Requirements
 * preferences in My eBay.
 * 
 */
public class BuyerRequirementDetailsType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ShipToRegistrationCountry")
	@Order(value=0)
	public Boolean shipToRegistrationCountry;	
	
	@Element(name = "ZeroFeedbackScore")
	@Order(value=1)
	public Boolean zeroFeedbackScore;	
	
	@Element(name = "MinimumFeedbackScore")
	@Order(value=2)
	public Integer minimumFeedbackScore;	
	
	@Element(name = "MaximumItemRequirements")
	@Order(value=3)
	public MaximumItemRequirementsType maximumItemRequirements;	
	
	@Element(name = "LinkedPayPalAccount")
	@Order(value=4)
	public Boolean linkedPayPalAccount;	
	
	@Element(name = "VerifiedUserRequirements")
	@Order(value=5)
	public VerifiedUserRequirementsType verifiedUserRequirements;	
	
	@Element(name = "MaximumUnpaidItemStrikesInfo")
	@Order(value=6)
	public MaximumUnpaidItemStrikesInfoType maximumUnpaidItemStrikesInfo;	
	
	@Element(name = "MaximumBuyerPolicyViolations")
	@Order(value=7)
	public MaximumBuyerPolicyViolationsType maximumBuyerPolicyViolations;	
	
	@AnyElement
	@Order(value=8)
	public List<Object> any;	
	
    
}