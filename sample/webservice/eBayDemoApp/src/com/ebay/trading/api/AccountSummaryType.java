// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.ebay.trading.api;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;
import java.util.Date;

/**
 * 
 * Summary data for the requesting user's seller account as a whole. This includes a
 * balance for the account, any past due amount and date, and defining data for
 * additional accounts (if the user has changed country of residency while having an
 * active eBay account).
 * 
 */
public class AccountSummaryType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "AccountState")
	@Order(value=0)
	public AccountStateCodeType accountState;	
	
	@Element(name = "InvoicePayment")
	@Order(value=1)
	public AmountType invoicePayment;	
	
	@Element(name = "InvoiceCredit")
	@Order(value=2)
	public AmountType invoiceCredit;	
	
	@Element(name = "InvoiceNewFee")
	@Order(value=3)
	public AmountType invoiceNewFee;	
	
	@Element(name = "AdditionalAccount")
	@Order(value=4)
	public List<AdditionalAccountType> additionalAccount;	
	
	@Element(name = "AmountPastDue")
	@Order(value=5)
	public AmountType amountPastDue;	
	
	@Element(name = "BankAccountInfo")
	@Order(value=6)
	public String bankAccountInfo;	
	
	@Element(name = "BankModifyDate")
	@Order(value=7)
	public Date bankModifyDate;	
	
	@Element(name = "BillingCycleDate")
	@Order(value=8)
	public Integer billingCycleDate;	
	
	@Element(name = "CreditCardExpiration")
	@Order(value=9)
	public Date creditCardExpiration;	
	
	@Element(name = "CreditCardInfo")
	@Order(value=10)
	public String creditCardInfo;	
	
	@Element(name = "CreditCardModifyDate")
	@Order(value=11)
	public Date creditCardModifyDate;	
	
	@Element(name = "CurrentBalance")
	@Order(value=12)
	public AmountType currentBalance;	
	
	@Element(name = "Email")
	@Order(value=13)
	public String email;	
	
	@Element(name = "InvoiceBalance")
	@Order(value=14)
	public AmountType invoiceBalance;	
	
	@Element(name = "InvoiceDate")
	@Order(value=15)
	public Date invoiceDate;	
	
	@Element(name = "LastAmountPaid")
	@Order(value=16)
	public AmountType lastAmountPaid;	
	
	@Element(name = "LastPaymentDate")
	@Order(value=17)
	public Date lastPaymentDate;	
	
	@Element(name = "PastDue")
	@Order(value=18)
	public Boolean pastDue;	
	
	@Element(name = "PaymentMethod")
	@Order(value=19)
	public SellerPaymentMethodCodeType paymentMethod;	
	
	@AnyElement
	@Order(value=20)
	public List<Object> any;	
	
    
}