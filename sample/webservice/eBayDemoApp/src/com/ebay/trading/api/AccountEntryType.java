// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.ebay.trading.api;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;
import java.math.BigDecimal;
import java.util.Date;

/**
 * 
 * Contains the data for a single account detail entry. Each detail entry is a
 * transaction posted to the account and may be: a credit, a debit, or an
 * administrative action (such as an update putting a credit card on file for
 * the account). You can uniquely identify
 * the entries that the <b>GetAccount</b> call returns within the <b>AccountEntries</b> tag.
 * Specifically, the following fields, returned within the <b>AccountEntries</b> tag,
 * can be used in combination as a unique key: AccountEntry.Date, AccountEntry.AccountDetailsEntryType,
 * AccountEntry.ItemID, and AccountEntry.RefNumber.
 * 
 */
public class AccountEntryType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "AccountDetailsEntryType")
	@Order(value=0)
	public AccountDetailEntryCodeType accountDetailsEntryType;	
	
	@Element(name = "Description")
	@Order(value=1)
	public String description;	
	
	@Element(name = "Balance")
	@Order(value=2)
	public AmountType balance;	
	
	@Element(name = "Date")
	@Order(value=3)
	public Date date;	
	
	@Element(name = "GrossDetailAmount")
	@Order(value=4)
	public AmountType grossDetailAmount;	
	
	@Element(name = "ItemID")
	@Order(value=5)
	public String itemID;	
	
	@Element(name = "Memo")
	@Order(value=6)
	public String memo;	
	
	@Element(name = "ConversionRate")
	@Order(value=7)
	public AmountType conversionRate;	
	
	@Element(name = "NetDetailAmount")
	@Order(value=8)
	public AmountType netDetailAmount;	
	
	@Element(name = "RefNumber")
	@Order(value=9)
	public String refNumber;	
	
	@Element(name = "VATPercent")
	@Order(value=10)
	public BigDecimal vatPercent;	
	
	@Element(name = "Title")
	@Order(value=11)
	public String title;	
	
	@Element(name = "OrderLineItemID")
	@Order(value=12)
	public String orderLineItemID;	
	
	@Element(name = "TransactionID")
	@Order(value=13)
	public String transactionID;	
	
	@Element(name = "ReceivedTopRatedDiscount")
	@Order(value=14)
	public Boolean receivedTopRatedDiscount;	
	
	@AnyElement
	@Order(value=15)
	public List<Object> any;	
	
    
}