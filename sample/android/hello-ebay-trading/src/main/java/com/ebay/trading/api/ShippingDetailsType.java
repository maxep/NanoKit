// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.ebay.trading.api;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Type defining the ShippingDetails container, which contains the shipping-related
 * details for an item (pre-checkout) or order (post-checkout).
 * <br/><br/>
 *             <span class="tablenote">
 *             <strong>IMPORTANT:</strong> To avoid loss of shipping details when revising a listing, you must include all <strong>ShippingDetails</strong> fields that were originally provided. Do not omit any tag, even if its value does not change. Omitting a shipping field when revising an item will remove that detail from the listing.
 *             </span>
 * 
 */
public class ShippingDetailsType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "AllowPaymentEdit")
	@Order(value=0)
	public Boolean allowPaymentEdit;	
	
	@Element(name = "ApplyShippingDiscount")
	@Order(value=1)
	public Boolean applyShippingDiscount;	
	
	@Element(name = "GlobalShipping")
	@Order(value=2)
	public Boolean globalShipping;	
	
	@Element(name = "CalculatedShippingRate")
	@Order(value=3)
	public CalculatedShippingRateType calculatedShippingRate;	
	
	@Element(name = "ChangePaymentInstructions")
	@Order(value=4)
	public Boolean changePaymentInstructions;	
	
	@Element(name = "InsuranceFee")
	@Order(value=5)
	public AmountType insuranceFee;	
	
	@Element(name = "InsuranceOption")
	@Order(value=6)
	public InsuranceOptionCodeType insuranceOption;	
	
	@Element(name = "InsuranceWanted")
	@Order(value=7)
	public Boolean insuranceWanted;	
	
	@Element(name = "PaymentEdited")
	@Order(value=8)
	public Boolean paymentEdited;	
	
	@Element(name = "PaymentInstructions")
	@Order(value=9)
	public String paymentInstructions;	
	
	@Element(name = "SalesTax")
	@Order(value=10)
	public SalesTaxType salesTax;	
	
	@Element(name = "ShippingRateErrorMessage")
	@Order(value=11)
	public String shippingRateErrorMessage;	
	
	@Element(name = "ShippingRateType")
	@Order(value=12)
	public ShippingRateTypeCodeType shippingRateType;	
	
	@Element(name = "ShippingServiceOptions")
	@Order(value=13)
	public List<ShippingServiceOptionsType> shippingServiceOptions;	
	
	@Element(name = "InternationalShippingServiceOption")
	@Order(value=14)
	public List<InternationalShippingServiceOptionsType> internationalShippingServiceOption;	
	
	@Element(name = "ShippingType")
	@Order(value=15)
	public ShippingTypeCodeType shippingType;	
	
	@Element(name = "SellingManagerSalesRecordNumber")
	@Order(value=16)
	public Integer sellingManagerSalesRecordNumber;	
	
	@Element(name = "ThirdPartyCheckout")
	@Order(value=17)
	public Boolean thirdPartyCheckout;	
	
	@Element(name = "TaxTable")
	@Order(value=18)
	public TaxTableType taxTable;	
	
	@Element(name = "GetItFast")
	@Order(value=19)
	public Boolean getItFast;	
	
	@Element(name = "ShippingServiceUsed")
	@Order(value=20)
	public String shippingServiceUsed;	
	
	@Element(name = "DefaultShippingCost")
	@Order(value=21)
	public AmountType defaultShippingCost;	
	
	@Element(name = "InsuranceDetails")
	@Order(value=22)
	public InsuranceDetailsType insuranceDetails;	
	
	@Element(name = "InternationalInsuranceDetails")
	@Order(value=23)
	public InsuranceDetailsType internationalInsuranceDetails;	
	
	@Element(name = "ShippingDiscountProfileID")
	@Order(value=24)
	public String shippingDiscountProfileID;	
	
	@Element(name = "FlatShippingDiscount")
	@Order(value=25)
	public FlatShippingDiscountType flatShippingDiscount;	
	
	@Element(name = "CalculatedShippingDiscount")
	@Order(value=26)
	public CalculatedShippingDiscountType calculatedShippingDiscount;	
	
	@Element(name = "PromotionalShippingDiscount")
	@Order(value=27)
	public Boolean promotionalShippingDiscount;	
	
	@Element(name = "InternationalShippingDiscountProfileID")
	@Order(value=28)
	public String internationalShippingDiscountProfileID;	
	
	@Element(name = "InternationalFlatShippingDiscount")
	@Order(value=29)
	public FlatShippingDiscountType internationalFlatShippingDiscount;	
	
	@Element(name = "InternationalCalculatedShippingDiscount")
	@Order(value=30)
	public CalculatedShippingDiscountType internationalCalculatedShippingDiscount;	
	
	@Element(name = "InternationalPromotionalShippingDiscount")
	@Order(value=31)
	public Boolean internationalPromotionalShippingDiscount;	
	
	@Element(name = "PromotionalShippingDiscountDetails")
	@Order(value=32)
	public PromotionalShippingDiscountDetailsType promotionalShippingDiscountDetails;	
	
	@Element(name = "CODCost")
	@Order(value=33)
	public AmountType codCost;	
	
	@Element(name = "ExcludeShipToLocation")
	@Order(value=34)
	public List<String> excludeShipToLocation;	
	
	@Element(name = "SellerExcludeShipToLocationsPreference")
	@Order(value=35)
	public Boolean sellerExcludeShipToLocationsPreference;	
	
	@Element(name = "ShipmentTrackingDetails")
	@Order(value=36)
	public List<ShipmentTrackingDetailsType> shipmentTrackingDetails;	
	
	@Element(name = "RateTableDetails")
	@Order(value=37)
	public RateTableDetailsType rateTableDetails;	
	
	@AnyElement
	@Order(value=38)
	public List<Object> any;	
	
    
}