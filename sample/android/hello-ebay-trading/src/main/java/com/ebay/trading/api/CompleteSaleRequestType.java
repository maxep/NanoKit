// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.ebay.trading.api;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Enables a seller to do various tasks after the creation of a single line item or
 * multiple line item order. Typically, this call is used after the
 * buyer has paid for the order, but it can be called by the
 * seller beforehand. Typical post-payment tasks available to this call include
 * marking the order as paid, marking the order as shipped, providing shipment tracking
 * details, and leaving feedback for the buyer.
 * 
 */
@RootElement(name = "CompleteSaleRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class CompleteSaleRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ItemID")
	@Order(value=0)
	public String itemID;	
	
	@Element(name = "TransactionID")
	@Order(value=1)
	public String transactionID;	
	
	@Element(name = "FeedbackInfo")
	@Order(value=2)
	public FeedbackInfoType feedbackInfo;	
	
	@Element(name = "Shipped")
	@Order(value=3)
	public Boolean shipped;	
	
	@Element(name = "Paid")
	@Order(value=4)
	public Boolean paid;	
	
	@Element(name = "ListingType")
	@Order(value=5)
	public ListingTypeCodeType listingType;	
	
	@Element(name = "Shipment")
	@Order(value=6)
	public ShipmentType shipment;	
	
	@Element(name = "OrderID")
	@Order(value=7)
	public String orderID;	
	
	@Element(name = "OrderLineItemID")
	@Order(value=8)
	public String orderLineItemID;	
	
    
}