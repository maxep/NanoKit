// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.ebay.trading.api;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;
import java.util.Date;

/**
 * 
 * Contains the definition of a rule that governs the number of times your
 * application can access the eBay API (invoke a call) on an hourly, daily, or
 * periodic basis.
 * 
 */
public class ApiAccessRuleType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "CallName")
	@Order(value=0)
	public String callName;	
	
	@Element(name = "CountsTowardAggregate")
	@Order(value=1)
	public Boolean countsTowardAggregate;	
	
	@Element(name = "DailyHardLimit")
	@Order(value=2)
	public Long dailyHardLimit;	
	
	@Element(name = "DailySoftLimit")
	@Order(value=3)
	public Long dailySoftLimit;	
	
	@Element(name = "DailyUsage")
	@Order(value=4)
	public Long dailyUsage;	
	
	@Element(name = "HourlyHardLimit")
	@Order(value=5)
	public Long hourlyHardLimit;	
	
	@Element(name = "HourlySoftLimit")
	@Order(value=6)
	public Long hourlySoftLimit;	
	
	@Element(name = "HourlyUsage")
	@Order(value=7)
	public Long hourlyUsage;	
	
	@Element(name = "Period")
	@Order(value=8)
	public Integer period;	
	
	@Element(name = "PeriodicHardLimit")
	@Order(value=9)
	public Long periodicHardLimit;	
	
	@Element(name = "PeriodicSoftLimit")
	@Order(value=10)
	public Long periodicSoftLimit;	
	
	@Element(name = "PeriodicUsage")
	@Order(value=11)
	public Long periodicUsage;	
	
	@Element(name = "PeriodicStartDate")
	@Order(value=12)
	public Date periodicStartDate;	
	
	@Element(name = "ModTime")
	@Order(value=13)
	public Date modTime;	
	
	@Element(name = "RuleCurrentStatus")
	@Order(value=14)
	public AccessRuleCurrentStatusCodeType ruleCurrentStatus;	
	
	@Element(name = "RuleStatus")
	@Order(value=15)
	public AccessRuleStatusCodeType ruleStatus;	
	
	@AnyElement
	@Order(value=16)
	public List<Object> any;	
	
    
}