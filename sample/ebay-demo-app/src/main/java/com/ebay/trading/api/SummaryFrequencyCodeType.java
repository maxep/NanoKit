// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.ebay.trading.api;

/**
 * 
 * How often the summary is to be delivered.
 * 
 */
public enum SummaryFrequencyCodeType {

    /**
     * 
   * Deliver every Sunday.
   * 
     */
    EVERY_SUNDAY("EverySunday"),
  

    /**
     * 
   * Deliver every Monday.
   * 
     */
    EVERY_MONDAY("EveryMonday"),
  

    /**
     * 
   * Deliver every Tuesday.
   * 
     */
    EVERY_TUESDAY("EveryTuesday"),
  

    /**
     * 
   * Deliver every Wednesday.
   * 
     */
    EVERY_WEDNESDAY("EveryWednesday"),
  

    /**
     * 
   * Deliver every Thursday.
   * 
     */
    EVERY_THURSDAY("EveryThursday"),
  

    /**
     * 
   * Deliver every Friday.
   * 
     */
    EVERY_FRIDAY("EveryFriday"),
  

    /**
     * 
   * Deliver every Saturday.
   * 
     */
    EVERY_SATURDAY("EverySaturday"),
  

    /**
     * 
   * On day 1 of the month.
   * 
     */
    MONTHLY_ON_1_ST("MonthlyOn1st"),
  

    /**
     * 
   * On day 2 of the month.
   * 
     */
    MONTHLY_ON_2_ND("MonthlyOn2nd"),
  

    /**
     * 
   * On day 3 of the month.
   * 
     */
    MONTHLY_ON_3_RD("MonthlyOn3rd"),
  

    /**
     * 
   * On day 4 of the month.
   * 
     */
    MONTHLY_ON_4_TH("MonthlyOn4th"),
  

    /**
     * 
   * On day 5 of the month.
   * 
     */
    MONTHLY_ON_5_TH("MonthlyOn5th"),
  

    /**
     * 
   * On day 6 of the month.
   * 
     */
    MONTHLY_ON_6_TH("MonthlyOn6th"),
  

    /**
     * 
   * On day 7 of the month.
   * 
     */
    MONTHLY_ON_7_TH("MonthlyOn7th"),
  

    /**
     * 
   * On day 8 of the month.
   * 
     */
    MONTHLY_ON_8_TH("MonthlyOn8th"),
  

    /**
     * 
   * On day 9 of the month.
   * 
     */
    MONTHLY_ON_9_TH("MonthlyOn9th"),
  

    /**
     * 
   * On day 10 of the month.
   * 
     */
    MONTHLY_ON_10_TH("MonthlyOn10th"),
  

    /**
     * 
   * On day 11 of the month.
   * 
     */
    MONTHLY_ON_11_TH("MonthlyOn11th"),
  

    /**
     * 
   * On day 12 of the month.
   * 
     */
    MONTHLY_ON_12_TH("MonthlyOn12th"),
  

    /**
     * 
   * On day 13 of the month.
   * 
     */
    MONTHLY_ON_13_TH("MonthlyOn13th"),
  

    /**
     * 
   * On day 14 of the month.
   * 
     */
    MONTHLY_ON_14_TH("MonthlyOn14th"),
  

    /**
     * 
   * On day 15 of the month.
   * 
     */
    MONTHLY_ON_15_TH("MonthlyOn15th"),
  

    /**
     * 
   * On day 16 of the month.
   * 
     */
    MONTHLY_ON_16_TH("MonthlyOn16th"),
  

    /**
     * 
   * On day 17 of the month.
   * 
     */
    MONTHLY_ON_17_TH("MonthlyOn17th"),
  

    /**
     * 
   * On day 18 of the month.
   * 
     */
    MONTHLY_ON_18_TH("MonthlyOn18th"),
  

    /**
     * 
   * On day 19 of the month.
   * 
     */
    MONTHLY_ON_19_TH("MonthlyOn19th"),
  

    /**
     * 
   * On day 20 of the month.
   * 
     */
    MONTHLY_ON_20_TH("MonthlyOn20th"),
  

    /**
     * 
   * On day 21 of the month.
   * 
     */
    MONTHLY_ON_21_ST("MonthlyOn21st"),
  

    /**
     * 
   * On day 22 of the month.
   * 
     */
    MONTHLY_ON_22_ND("MonthlyOn22nd"),
  

    /**
     * 
   * On day 23 of the month.
   * 
     */
    MONTHLY_ON_23_RD("MonthlyOn23rd"),
  

    /**
     * 
   * On day 24 of the month.
   * 
     */
    MONTHLY_ON_24_TH("MonthlyOn24th"),
  

    /**
     * 
   * On day 25 of the month.
   * 
     */
    MONTHLY_ON_25_TH("MonthlyOn25th"),
  

    /**
     * 
   * On day 26 of the month.
   * 
     */
    MONTHLY_ON_26_TH("MonthlyOn26th"),
  

    /**
     * 
   * On day 27 of the month.
   * 
     */
    MONTHLY_ON_27_TH("MonthlyOn27th"),
  

    /**
     * 
   * On day 28 of the month.
   * 
     */
    MONTHLY_ON_28_TH("MonthlyOn28th"),
  

    /**
     * 
   * On day 29 of the month.
   * 
     */
    MONTHLY_ON_29_TH("MonthlyOn29th"),
  

    /**
     * 
   * On day 30 of the month.
   * 
     */
    MONTHLY_ON_30_TH("MonthlyOn30th"),
  

    /**
     * 
   * On day 31 of the month.
   * 
     */
    MONTHLY_ON_31_ST("MonthlyOn31st"),
  

    /**
     * 
   * Every 31 days.
   * 
     */
    EVERY_31_DAYS("Every31Days"),
  

    /**
     * 
   * Every 60 days.
   * 
     */
    EVERY_60_DAYS("Every60Days"),
  

    CUSTOM_CODE("CustomCode");
  
  
    private final String value;
  
    SummaryFrequencyCodeType(String v) {
        value = v;
    }
    
    public String value() {
        return value;
    }
    
    public static SummaryFrequencyCodeType fromValue(String v) {
        if (v != null) {
            for (SummaryFrequencyCodeType c: SummaryFrequencyCodeType.values()) {
                if (c.value.equals(v)) {
                    return c;
                }
            }
        }
        throw new IllegalArgumentException(v);
    }
}