// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.ebay.trading.api;

/**
 * 
 * This is automatic or manual depending on selection.
 * 
 */
public enum SelectionModeCodeType {

    /**
     * 
   * Automatic criteria. Reserved for future use.
   * 
     */
    AUTOMATIC("Automatic"),
  

    /**
     * 
   * Manual criteria. Reserved for future use.
   * 
     */
    MANUAL("Manual"),
  

    /**
     * 
   * In listing requests, do not specify the name or value because
   * they will be filled in by eBay.
   * In GetItemRecommendations, this indicates that the Item Specific
   * will be pre-filled from a catalog, based on a product ID
   * that you passed in the request. They should be presented as
   * read-only to the seller. If you specify a prefilled value in
   * your listing request when you list with a catalog product,
   * eBay drops the value and uses the value from the catalog instead.
   * 
     */
    PREFILLED("Prefilled"),
  

    /**
     * 
   * In listing requests, only specify a value that eBay has
   * recommended. That is, select from the list of recommended values;
   * don't specify your own custom details. If you specify a different value, the listing request may return errors. Rarely used.
   * 
     */
    SELECTION_ONLY("SelectionOnly"),
  

    /**
     * 
   * In listing requests, specify any name or value, or select from the
   * list of recommended values, if present. This is used in most cases.
   * 
     */
    FREE_TEXT("FreeText"),
  

    /**
     * 
   * Reserved for future use.
   * 
     */
    CUSTOM_CODE("CustomCode");
  
  
    private final String value;
  
    SelectionModeCodeType(String v) {
        value = v;
    }
    
    public String value() {
        return value;
    }
    
    public static SelectionModeCodeType fromValue(String v) {
        if (v != null) {
            for (SelectionModeCodeType c: SelectionModeCodeType.values()) {
                if (c.value.equals(v)) {
                    return c;
                }
            }
        }
        throw new IllegalArgumentException(v);
    }
}