// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.ebay.shopping.api;

/**
 * 
 * Identifies payment methods used by a buyer to pay a
 * seller. On item listings, identifies one of the payment methods
 * seller will accept for the item. Available payment methods can
 * differ by site and item. Payment methods are not applicable to eBay
 * Real Estate ad format listings.
 * 
 */
public enum BuyerPaymentMethodCodeType {

    /**
     * 
   * No payment method specified.
   * For example, no payment methods would be specified for Ad format listings.
   * 
     */
    NONE("None"),
  

    /**
     * 
   * Money order/cashiers check.
   * Not applicable to US/CA eBay Motors listings.
   * 
     */
    MOCC("MOCC"),
  

    /**
     * 
   * American Express.
   * Not applicable to US/CA eBay Motors listings.
   * 
     */
    AM_EX("AmEx"),
  

    /**
     * 
   * Payment instructions are contained in the item's description.
   * 
     */
    PAYMENT_SEE_DESCRIPTION("PaymentSeeDescription"),
  

    /**
     * 
   * Credit card.
   * Not applicable to Real Estate or US/CA eBay Motors listings.
   * 
     */
    CC_ACCEPTED("CCAccepted"),
  

    /**
     * 
   * Personal check.
   * 
     */
    PERSONAL_CHECK("PersonalCheck"),
  

    /**
     * 
   * Cash on delivery.
   * Only applicable to the following eBay sites: AT (16), BEFR (24),
   * BENL (123), CH (193), DE (77), ES (186), FR (71), HK (201), IN (203),
   * IT (101), PL (212), and SG (216).
   * Not applicable to Real Estate listings.
   * 
     */
    COD("COD"),
  

    /**
     * 
   * Visa/Mastercard. These qualify as safe payment methods.
   * Not applicable to US/CA eBay Motors listings.
   * 
     */
    VISA_MC("VisaMC"),
  

    /**
     * 
   * PaisaPay (for India site only). This qualifies as a safe payment method.
   * 
     */
    PAISA_PAY_ACCEPTED("PaisaPayAccepted"),
  

    /**
     * 
   * Other forms of payment.
   * Not applicable to US/CA eBay Motors listings
   * (see PaymentSeeDescription instead).
   * 
     */
    OTHER("Other"),
  

    /**
     * 
   * PayPal is accepted as a payment method. This qualifies as a safe payment method. <br>
   * <br>
   * If PayPal is specified for US/CA eBay Motors vehicles, it is for
   * the vehicle deposit (not for purchasing the vehicle).
   * 
     */
    PAY_PAL("PayPal"),
  

    /**
     * 
   * Discover card.
   * Not applicable to US/CA eBay Motors listings.
   * 
     */
    DISCOVER("Discover"),
  

    /**
     * 
   * This payment method is equivalent to the PayOnPickup payment method.
   * CashOnPickup applies even for listings on the eBay US site that refer to "Pay on pickup."
   * 
     */
    CASH_ON_PICKUP("CashOnPickup"),
  

    /**
     * 
   * Direct transfer of money.
   * Not applicable to US/CA eBay Motors listings.
   * 
     */
    MONEY_XFER_ACCEPTED("MoneyXferAccepted"),
  

    /**
     * 
   * If the seller has bank account information on file, and
   * MoneyXferAcceptedInCheckout = true, then the bank account
   * information will be displayed in Checkout.
   * 
     */
    MONEY_XFER_ACCEPTED_IN_CHECKOUT("MoneyXferAcceptedInCheckout"),
  

    /**
     * 
   * All other online payments.
   * Not applicable to US/CA eBay Motors listings.
   * 
     */
    OTHER_ONLINE_PAYMENTS("OtherOnlinePayments"),
  

    ESCROW("Escrow"),
  

    PRE_PAY_DELIVERY("PrePayDelivery"),
  

    COD_PRE_PAY_DELIVERY("CODPrePayDelivery"),
  

    POSTAL_TRANSFER("PostalTransfer"),
  

    /**
     * 
   * Placeholder value. See
   * <a href="types/simpleTypes.html#token">token</a>.
   * 
     */
    CUSTOM_CODE("CustomCode"),
  

    /**
     * 
   * Loan check option (applicable only to the US eBay Motors site,
   * except in the Parts and Accessories category, and the eBay Canada site for motors).
   * 
     */
    LOAN_CHECK("LoanCheck"),
  

    /**
     * 
   * Cash-in-person option. Applicable only to US and Canada eBay Motors vehicles,
   * (not the Parts and Accessories category).
   * 
     */
    CASH_IN_PERSON("CashInPerson"),
  

    /**
     * 
   * Elektronisches Lastschriftverfahren (direct debit).
   * Only applicable to Express Germany.
   * 
     */
    ELV("ELV"),
  

    /**
     * 
   * PaisaPayEscrow EMI (Equal Monthly Installment) payment method. 
   * The PaisaPayEscrowEMI payment method is only for the India site (site ID 203).
   * 
     */
    PAISA_PAY_ESCROW_EMI("PaisaPayEscrowEMI"),
  

    /**
     * 
   * The Moneybookers payment method. 
   * For more information, see http://www.moneybookers.com/partners/us/ebay. 
   * Only applicable to the US site (and 
   * to the Parts and Accessories category of the US eBay Motors site).
   * 
     */
    MONEYBOOKERS("Moneybookers"),
  

    /**
     * 
   * The Paymate payment method. For more information, 
   * see http://www.paymate.com/eBay. 
   * Only applicable to the US site (and 
   * to the Parts and Accessories category of the US eBay Motors site).
   * 
     */
    PAYMATE("Paymate"),
  

    /**
     * 
   * The ProPay payment method. US site only. For more information, 
   * see http://www.Propay.com/eBay.
   * 
     */
    PRO_PAY("ProPay"),
  

    /**
     * 
   * For all payment intermediated transactions, If the authenticated caller is a seller then Standard Payment Method is returned to as Payment Method Used to sellers.
   * OrderArray.Order.CheckoutStatus.PaymentMethod (GetOrders, GetOrderTransaction) and OrderArray.Order
   * .TransactionArray.Transaction.Status (For all the 4 APIs).
   *     The COD (Cash on Demand) or POP (Pay on Pickup) should be shown as is to the buyers and sellers, these payment methods are not intermediated.
   *   
     */
    STANDARD_PAYMENT("StandardPayment");
  
  
    private final String value;
  
    BuyerPaymentMethodCodeType(String v) {
        value = v;
    }
    
    public String value() {
        return value;
    }
    
    public static BuyerPaymentMethodCodeType fromValue(String v) {
        if (v != null) {
            for (BuyerPaymentMethodCodeType c: BuyerPaymentMethodCodeType.values()) {
                if (c.value.equals(v)) {
                    return c;
                }
            }
        }
        throw new IllegalArgumentException(v);
    }
}